name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Enable Corepack & prepare pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Setup pnpm (action fallback)
        uses: pnpm/action-setup@v3

      - name: Verify pnpm
        run: pnpm -v

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm -w lint --if-present

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Enable Corepack & prepare pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Setup pnpm (action fallback)
        uses: pnpm/action-setup@v3

      - name: Verify pnpm
        run: pnpm -v

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Typecheck UI
        run: pnpm -w -F @repo/ui check-types

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: typecheck
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Enable Corepack & prepare pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Setup pnpm (action fallback)
        uses: pnpm/action-setup@v3

      - name: Verify pnpm
        run: pnpm -v

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Cache turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Clean web
        run: pnpm -w -F web exec rimraf .next .output || true

      - name: Build UI package
        run: pnpm -w -F @repo/ui build:ui

      - name: Build web app
        run: pnpm -w -F web build
